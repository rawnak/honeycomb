/* ZCO - Cross-platform Application Framework
 * Copyright (C) 2014  Rawnak Jahan Syeda
 *
 * z-test-derived-object.zco: Test object
 * This file is part of ZCO.
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ZCO is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with ZCO.  If not, see <http://www.gnu.org/licenses/>.
 */

%h{
#include <z-object.h>
#include <z-string.h>
#include <z-test-object.h>
%}

%{
#include <stdio.h>
%}

class ZTestDerivedObject : ZTestObject
{
	init(Self *self)
	{
	}

	public Self *new(struct zco_context_t *ctx, ZMemoryAllocator *allocator)
	{
		Self *self = GET_NEW(ctx, allocator);
		return self;
	}

	public void clicked!(Self *self, char *message);
	public void clicked2!(Self *self, char *message);
	public void clicked3!(Self *self, char *message);

        public int dummy#
        {
                get
                {

                }
                set
                {

                }
        }

	public void click_it(Self *self, char *message)
	{
		clicked(self, message);
	}

	public void close1(Self *self, ZString *message)
	{
		char *s = z_string_get_cstring(message, Z_STRING_ENCODING_UTF8);
		printf("close1 called!!  message = %s\n", s);
		free(s);
	}

	public void close2(Self *self, ZString *message)
	{
		char *s = z_string_get_cstring(message, Z_STRING_ENCODING_UTF8);
		printf("close2 called!! message = %s\n", s);
		free(s);
	}
}

